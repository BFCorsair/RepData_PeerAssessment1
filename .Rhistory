data("ToothGrowth")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
load(ddply)
load(dplyr)
?ddply
?ddplyr
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:plyr", unload=TRUE)
detach("package:dplyr", unload=TRUE)
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
setwd("/Users/bfraenkel/Documents/Data-Science/Coursera/05_Reproducible_Research/Project1")
?arrange
library(dplyr)
?arrange
?ddplyr
detach(dplyr)
detach("package:dplyr", unload=TRUE)
detach(plyr)
library(plyr)
library(dplyr)
source("Repro_Research_1.R")
ddply(activity_clean, summarise,total_steps=sum(steps))
?ddply
head(activity)
ddply(activity_clean, .(date), summarize, sum_steps=sum(steps))
source("Repro_Research_1.R")
?median
source("Repro_Research_1.R")
qplot(sum_steps, data=daily_steps, geom="histogram")
source("Repro_Research_1.R")
?plot
with(daily_steps {plot(date,sum_steps)})
?with
with(daily_steps, plot(date,sum_steps))
g <- ggplot(daily_steps, aes(date, sum_steps))
g <- geom_point()
g
g <- ggplot(daily_steps, aes(date, sum_steps))
g <- geom_line()
g
g <- ggplot(daily_steps, aes(date, sum_steps))
g <- g+geom_line()
g
g <- ggplot(daily_steps, aes(date, sum_steps))
g <- g+geom_point()
g
names(activity)
source("Repro_Research_1.R")
plot(interval_steps)
g <- ggplot(interval_steps,aes(interval, sum_steps))
g <- g + geom_line()
g
g <- ggplot(interval_steps,aes(interval, sum_steps))
g <- g + geom_path()
g
g <- ggplot(interval_steps,aes(interval, sum_steps))
g <- g + geom_point()
g
head(interval_steps)
nb_days <- nrow(daily_steps)
nb_days
ave_steps <- mutate(interval_steps, sum_steps = sum_steps/nb_days)
head(ave_steps)
colnames(ave_steps) <- c("interval", "average_steps")
head(ave_steps)
colnames(ave_steps) <- c("interval", "avrg_steps")
g <- ggplot(ave_steps,aes(interval, avrg_steps))
g <- g + geom_line(linetype=1)
g
g <- ggplot(ave_steps,aes(avrg_steps))
g <- g + geom_line(linetype=1)
g
ave_steps$date
ave_steps$interval
str(ave_steps)
av_steps <- mutate(ave_steps, interval = as.int(interval))
av_steps <- mutate(ave_steps, interval = as.number(interval))
av_steps <- mutate(ave_steps, interval = as.integer(interval))
str(av_steps)
source("Repro_Research_1.R")
g <- ggplot(av_steps, aes(interval, av_steps))
g <- geom_line()
g
g <- ggplot(av_steps, aes(interval, av_steps))
g <- g+geom_line()
g
plot(av_steps)
str(av_steps)
source("Repro_Research_1.R")
g <- ggplot(av_steps, aes(interval, av_steps))
g <- g+geom_line()
g
g <- g+geom_line(size=2)
g
g <- g+geom_line(size=1)
g
g <- ggplot(av_steps, aes(interval, av_steps))
g <- g+geom_line(size=1)
g
g <- g+geom_line(size=1,colour="blue")
g
av_steps[with(av_steps, order(-av_steps))]
av_steps[with(av_steps, order(-av_steps)),]
source("Repro_Research_1.R")
head(activity)
?filter
tt <- filter(activity, is.NA(steps))
tt <- filter(activity, isNA(steps))
tt <- filter(activity, is.na(steps))
nrow(tt)
nrow(activity)
nrow(activity_clean)
nrow(av_steps)
head(interval_steps)
head(av_steps)
activity_full <- mutate(activity, steps = ifelse(is.na(steps), interval_steps[interval,"avrg_steps"], steps))
head(activity)
activity_full <- mutate(activity, steps = ifelse(is.na(steps), 5, steps))
head(activity_full)
activity_full <- mutate(activity, steps = ifelse(is.na(steps), interval, steps))
head(activity_full)
activity_full <- mutate(activity, steps = ifelse(is.na(steps), av_steps[interval,"avrg_steps"], steps))
head(activity_full)
head(av_steps)
av_steps[interval = 5, ]
av_steps[interval == 5, ]
av_steps["interval" == 5, ]
av_steps[av_steps$interval = 5, ]
av_steps[av_steps$interval == 5, ]
av_steps[av_steps$interval == 5, "avrg_steps"]
activity_full <- mutate(activity, steps = ifelse(is.na(steps), av_steps[av_steps$interval == interval, "avrg_steps"], steps))
head(activity_full)
head(av_steps)
activity[10"100"]
activity[100,]
activity[101,]
activity[1001,]
activity[1005,]
activity[1041,]
activity_full[1041,]
daily_steps_full <- ddply(activity_full, .(date), summarize, sum_steps=sum(steps))
qplot(sum_steps, data=daily_steps_full, geom="histogram")
qplot(sum_steps, data=daily_steps, geom="histogram")
qplot(sum_steps, data=daily_steps_full, geom="histogram")
head(daily_steps)
head(daily_steps_full)
nrow(daily_steps_full)
nrow(daily_steps)
activity_full <- mutate(activity, steps = ifelse(is.na(steps), round(av_steps[av_steps$interval == interval,0), "avrg_steps"], steps))
activity_full <- mutate(activity, steps = ifelse(is.na(steps), round(av_steps[av_steps$interval == interval,0, "avrg_steps"]), steps))
activity_full <- mutate(activity, steps = ifelse(is.na(steps), round(av_steps[av_steps$interval == interval, "avrg_steps"],0), steps))
daily_steps_full <- ddply(activity_full, .(date), summarize, sum_steps=sum(steps))
qplot(sum_steps, data=daily_steps_full, geom="histogram")
daily_steps_full <- ddply(activity_full, .(date), summarize, sum_steps=sum(steps))
qplot(sum_steps, data=daily_steps, geom="histogram")
mean_steps_full <- mean(daily_steps_full$sum_steps)
median_steps_full <- median(daily_steps_full$sum_steps)
message(paste0("daily average number of steps - after NA replacement:", round(mean_steps_full,2)))
message(paste0("median of steps taken per day  - after NA replacement:", round(median_steps_full,2)))
head(daily_steps_full)
mean_steps_full
mean(daily_steps_full$sum_steps)
mean(5)
daily_steps_full$sum_steps
?any.na
?any.NA
any(is.na(activity_full))
any(is.na(interval_steps))
activity_full[is.na(activity_full$steps), ]
activity[activity$date == "2012-11-30", ]
interval_steps[2355,]
interval_steps[2350,]
activity[activity$interval == 2355,]
activity_clean[activity_clean$interval == 2355,]
tail(interval_steps)
tail(av_steps)
round(av_steps[av_steps$interval == 2355, "avrg_steps"],0)
activity_full[activity_full$interval == 2355, ]
nrow(activity_full[is.na(activity_full$steps),])
nrow(activity[is.na(activity$steps),])
activity_full <- mutate(activity, steps = ifelse(is.na(steps), av_steps[av_steps$interval == interval, "avrg_steps"], steps))
nrow(activity_full[is.na(activity_full$steps),])
av_steps[av_steps$interval == 2355,"avrg_steps"]
detach("package:plyr", unload=TRUE)
activity_full <- mutate(activity, steps = ifelse(is.na(steps), 5, steps))
any(is.na(activity_full))
?unique
nrow(av_steps)
length(unique(av_steps$interval))
activity_full <- mutate(activity, steps = av_steps[av_steps$interval == interval, "avrg_steps"])
any(is.na(activity_full))
tail(activity_full)
tail(av_steps)
length(unique(activity$interval))
str(av_steps)
str(activity)
activity_full <- mutate(activity, new_steps = av_steps[av_steps$interval == interval, "avrg_steps"])
any(is.na(activity_full$new_steps))
length(is.na(activity_full$new_steps))
match(2355, av_steps$interval)
activity_full <- mutate(activity, steps = ifelse(is.na(steps), round(av_steps[match(interval,av_steps$interval), "avrg_steps"],0), steps))
any(is.na(activity_full$new_steps))
any(is.na(activity_full))
daily_steps_full <- ddply(activity_full, .(date), summarize, sum_steps=sum(steps))
qplot(sum_steps, data=daily_steps_full, geom="histogram")
nrow(daily_steps)
nrow(daily_steps_full)
mean_steps_full <- mean(daily_steps_full$sum_steps)
median_steps_full <- median(daily_steps_full$sum_steps)
mean_steps_full
any(is.na(daily_steps_full))
any(is.na(activity_full))
tail(activity_full)
daily_steps_full <- ddply(activity_full, .(date), summarize, sum_steps=sum(steps))
